<?php
// $Id$


function editablefields_theme() {
  return array(
   'editablefields_formatter_editable' => array(
      'arguments' => array('element' => NULL),
    ),
  );
};


function editablefields_field_formatter_info()
{
  return array(
    'editable' => array(
      'label' => 'Editable',
      'field types' => array_keys(_content_field_types()),
      ));
}

function theme_editablefields_formatter_editable($element)
{
  $field_name=$element['#field_name'];
  $field = content_fields($field_name);
  $node=$element['#node'];


  // See if access to this form element is restricted,
  // if so, skip widget processing and just set the value.
  $access = TRUE;
  $field_access = module_invoke_all('field_access', 'edit', $field);
  foreach ($field_access as $value) {
    if (empty($value)) {
      $access = FALSE;
    }
  }
  if (!$access) {
    // can't edit
    $formatter_name = 'default';
    if ($formatter = _content_get_formatter($formatter_name, $field['type'])) {
      $theme = $formatter['module'] .'_formatter_'. $formatter_name;
      return theme($theme,$element);
    }
  } else {
    $formatter_name = 'default';
    if ($formatter = _content_get_formatter($formatter_name, $field['type'])) {
      $theme = $formatter['module'] .'_formatter_'. $formatter_name;
      return '<div class="ajaxeditable" nid="'.$node->nid.'" field="'.$field_name.'">'.
        theme($theme,$element).
        '</div>';
    }
  }
  
}
function _editablefields_create_form($node,$field_name) 
{
  $field = content_fields($field_name);
  
  $fname="editablefields_tmp_form_".$node->nid."_".$field_name;
  
  $form = array('#node' => $node);
  $form_state = array('values' => array($field['field_name'] => $default_value));
  module_load_include('inc', 'content', 'includes/content.node_form');
  $form['#field_info'] = array($field['field_name'] => $field);
  $form = content_field_form($form, $form_state, $field, 0);
  unset($form[$field_name]['#title']);
  
  
  $form['#type'] = 'form';
  $form['#field_info'] = array($field['field_name'] => $field);

  
  $form=form_builder($fname,$form, $form_state);
  
  return drupal_render($form);
}




?>
